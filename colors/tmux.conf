unbind C-b
set -g prefix C-a
bind-key C-a select-pane -t :.+

bind-key -n C-t new-window

#set -g mouse-select-pane on
#setw -g mode-mouse on

bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6

set-option -g status-keys vi
set-window-option -g mode-keys vi

set -g base-index 1
set -g status-interval 2

set -g status-right ""
set -g status-left ""
set -g set-titles on
set -g set-titles-string "tmux.#I.#W"

# default statusbar colors
set -g status-fg default
set -g status-bg default
set -g status-attr dim


# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg green
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr dim

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# pane colors
set -g pane-border-bg default
set -g pane-border-fg black
set -g pane-active-border-bg black
set -g pane-active-border-fg black

# center align the window list
set -g status-justify centre

bind '`' split-window "exec htop"
bind 'm' split-window "exec ncmpcpp"

set -g pane-active-border-bg default

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vi-style controls for copy mode
setw -g mode-keys vi

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h


set -g default-terminal "screen-256color"

# set-window-option -g mode-mouse on 
# set-option -g mouse-select-pane on
